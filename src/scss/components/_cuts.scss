.cuts {
	padding: var(--x-padding) 0;

	&__content {
		outline: 5px solid purple;
		overflow: hidden;
		margin-bottom: var(--n-margin);
	}

	&__picture {
		// --clip: circle(100px);
		--clip: circle(50px at 0 50%);
		float: left;
		width: 300px;
		height: 300px;

		& img {
			display: block;
			width: 100%;
			height: 100%;
			object-fit: cover;
		}

		&.clip-path {
			// clip-path: inset(30%);
			// clip-path: inset(30px);
			// clip-path: inset(2rem);
			// clip-path: inset(20px 50px 100px 150px);
			// clip-path: inset(20px 50px 100px 150px round 1rem 0.5rem 2rem 5rem);

			// clip-path: circle(radio at cordenadas: 50% 50%);
			// clip-path: var(--clip);

			// clip-path: ellipse(50% 30%);
			// clip-path: ellipse(50% 90%);

			// clip-path: polygon(50% 0%, 100% 100%, 0% 100%);
			// clip-path: polygon(0 100%, 50% 0, 100% 100%);

			// clip con svg -> Por el momento funciona en firefox
			// clip-path: url('/assets/icons/react.svg#react-clip');

			// ANIMACIÓN
			// clip-path: inset(10%);
			// clip-path: circle(100px);
			// clip-path: polygon(0% 100%, 50% 0%, 100% 100%);
			// transition: clip-path 3s;

			&:hover {
				// clip-path: inset(30%);
				// clip-path: circle(120px);
				// clip-path: circle(120px at 20% 70%);
				// clip-path: polygon(0% 0%, 50% 100%, 100% 0);
			}
		}

		&.shape-outside {
			// shape-outside: inset(100px);
			// shape-outside: var(--clip);
			// shape-outside: ellipse(50% 30% at 100px 10px);
			// shape-outside: url('/assets/icons/react.svg');
			// shape-margin: 2rem;
		}
	}
	// FIXME: MASCARAS

	&__masks {
		margin-bottom: var(--n-margin);
		width: 100%;
		border-radius: 50%;

		& img {
			// mask-image: url('/public/assets/icons/react.svg');
			// mask-repeat: no-repeat;
			// mask-position: center;
			// mask-size: 100%;

			// mask: url('/public/assets/icons/react.svg') no-repeat center / 60%;
			// mask-image: linear-gradient(yellow 50%, black 50%);

			mask-image: url('https://upload.wikimedia.org/wikipedia/commons/thumb/9/92/LACMTA_Circle_Red_Line.svg/2048px-LACMTA_Circle_Red_Line.svg.png'),
				url('https://upload.wikimedia.org/wikipedia/commons/thumb/9/92/LACMTA_Circle_Red_Line.svg/2048px-LACMTA_Circle_Red_Line.svg.png');

			mask-repeat: no-repeat;
			mask-size: 200px;
			mask-position: center, 200px center;
			mask-composite: add;
			mask-composite: subtract;
			mask-composite: intersect;
		}
	}
	background-color: blueviolet;

	&__box {
		width: 100px;
		height: 100px;
		border-radius: 50%;
		background-color: var(--primary-500);
		margin-left: auto;
		margin-right: auto;
		mask-image: url('https://upload.wikimedia.org/wikipedia/commons/thumb/9/92/LACMTA_Circle_Red_Line.svg/2048px-LACMTA_Circle_Red_Line.svg.png'),
			url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' d='M0 0h24v24H0z'/%3E%3Cpath d='M2.8 14h2.04l-.545 2.725 5.744 2.154 7.227-2.41L18.36 11H3.4l.4-2h14.96l.8-4H4.6L5 3h17l-3 15-9 3-8-3z'/%3E%3C/svg%3E");
		mask-size: 100%, 3rem;
		mask-position: center;
		mask-repeat: no-repeat;
		mask-composite: subtract;
	}
}

// FIXME: ==> Ejercicio <==
.mask {
	width: 100%;
	height: 100vh;
	background-color: red;
	position: relative;

	&__content {
		width: 100%;
		height: 100%;
		position: absolute;
		mask: url('/assets/images/mascara.png') no-repeat center / cover;

		& h1 {
			position: fixed;
			left: 50%;
			top: 15%;
			transform: translateX(-50%);
			white-space: nowrap;
			color: var(--grey-200);
			text-transform: uppercase;
			text-shadow: 4px 4px 4px rgba(233, 82, 236, 0.5);
			font-size: 4rem;
		}
	}

	& img {
		width: 100%;
		height: 100%;
		object-fit: cover;
	}
}

/*
	TODO: RECORTES

	* FIXME: clip-path -> inset(top, right, bottom, left);
		- inset(n%) : cuando se pasa un solo valor, recorta de fuera hacia dentro de distancia. Acepta %, rem, px

		- inset(n% n%) : recorta de fuera hacia dentro de distancia.
		- circle(n%) : Acepta un radio como valor, pero tambien acepta otros valores como son la coordenadas X y Y, pueden recibir (%, px, rem, em), circle(n% at  X Y).
		- elíptico(n%): Acepta dos radios y coordenadas como circle.
			* ellipse(n% n% at n% n%);
		- polygon : Recibe tres coordenas como minimo.
			* polygon(x y, x y, x y, ...)
		- Clip-path : Es animable, siempre tienen que tener los mismos puntos en las funciones, en la animación y en el elemento.

	* FIXME: Máscaras -> 
		- mask-composite : 
		 -> add : Hacen una fución, como si fuera una sola imagen.
		 -> subtract : Subtrae la segunda imagen.
		 -> intersect : Deja la intersección que comparten entre si.
		 -> exclude : Su intersección entre si lo borra.

*/
